{"name": "test_films_section", "status": "failed", "statusDetails": {"message": "AssertionError: Expected: 'new item saved successfully', Found: 'The name has already been taken.'", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0657cd782b45744a9f2408fdf3fdfc1b\")>\n\n    @allure.description(\"Test films section\")\n    def test_films_section(driver):\n        print(\"Start checking Films/TV section\")\n        fs = FilmsSectionSteps(driver)\n>       fs.genres_tab_test()\n\ntests\\test_clearbuy.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\films_section.py:212: in genres_tab_test\n    self.assert_word(self.get_success_notification(), \"new item saved successfully\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.films_section.FilmsSectionSteps object at 0x0000020A5C197B60>, locator = ('xpath', \"//div[@x-data='notification(0)']\"), expected_text = 'new item saved successfully', timeout = 30\n\n    def assert_word(self, locator, expected_text, timeout=30):\n        \"\"\"Check that the element's text matches the expected text.\"\"\"\n        element = self.wait_for_visible(locator, timeout)\n        actual_text = element.text.strip()\n>       assert actual_text == expected_text, f\"Expected: '{expected_text}', Found: '{actual_text}'\"\nE       AssertionError: Expected: 'new item saved successfully', Found: 'The name has already been taken.'\n\nbase\\base_methods.py:56: AssertionError"}, "description": "Test films section", "steps": [{"name": "genres tab test", "status": "failed", "statusDetails": {"message": "AssertionError: Expected: 'new item saved successfully', Found: 'The name has already been taken.'\n", "trace": "  File \"C:\\Users\\PC\\PycharmProjects\\pythonProject\\Clearbuy-regression_tests\\pages\\films_section.py\", line 212, in genres_tab_test\n    self.assert_word(self.get_success_notification(), \"new item saved successfully\")\n  File \"C:\\Users\\PC\\PycharmProjects\\pythonProject\\Clearbuy-regression_tests\\base\\base_methods.py\", line 56, in assert_word\n    assert actual_text == expected_text, f\"Expected: '{expected_text}', Found: '{actual_text}'\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "start": 1749208622219, "stop": 1749208624222}], "attachments": [{"name": "stdout", "source": "bc01cf18-fb8c-4aa3-b8e4-c8124d9450b8-attachment.txt", "type": "text/plain"}], "start": 1749208622219, "stop": 1749208624223, "uuid": "49a2d884-77cb-4574-b545-3258f9a9ab64", "historyId": "5fd4f711e6b8940b6518b4322d6a25e1", "testCaseId": "5fd4f711e6b8940b6518b4322d6a25e1", "fullName": "tests.test_clearbuy#test_films_section", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_clearbuy"}, {"name": "host", "value": "DESKTOP-CNNS4HO"}, {"name": "thread", "value": "11300-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_clearbuy"}]}